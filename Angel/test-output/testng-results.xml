<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-26T23:17:43 IST" name="Suite" finished-at="2022-09-26T23:18:57 IST" duration-ms="73407">
    <groups>
    </groups>
    <test started-at="2022-09-26T23:17:43 IST" name="ChromeTest" finished-at="2022-09-26T23:18:57 IST" duration-ms="73407">
      <class name="testNGClass1.BuyShare1">
        <test-method is-config="true" signature="launchBrowser(java.lang.String)[pri:0, instance:testNGClass1.BuyShare1@59309333]" started-at="2022-09-26T23:17:46 IST" name="launchBrowser" finished-at="2022-09-26T23:17:47 IST" duration-ms="1112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="createPOMObject()[pri:0, instance:testNGClass1.BuyShare1@59309333]" started-at="2022-09-26T23:17:47 IST" name="createPOMObject" finished-at="2022-09-26T23:17:47 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPOMObject -->
        <test-method is-config="true" signature="loginAngelOne()[pri:0, instance:testNGClass1.BuyShare1@59309333]" started-at="2022-09-26T23:17:47 IST" name="loginAngelOne" finished-at="2022-09-26T23:18:04 IST" duration-ms="16752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAngelOne -->
        <test-method signature="buyShare()[pri:0, instance:testNGClass1.BuyShare1@59309333]" started-at="2022-09-26T23:18:04 IST" name="buyShare" finished-at="2022-09-26T23:18:13 IST" duration-ms="9609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buyShare -->
        <test-method is-config="true" signature="confirmShareOrder(org.testng.ITestResult)[pri:0, instance:testNGClass1.BuyShare1@59309333]" started-at="2022-09-26T23:18:13 IST" name="confirmShareOrder" finished-at="2022-09-26T23:18:25 IST" duration-ms="11900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=buyShare status=SUCCESS method=BuyShare1.buyShare()[pri:0, instance:testNGClass1.BuyShare1@59309333] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmShareOrder -->
        <test-method is-config="true" signature="loginAngelOne()[pri:0, instance:testNGClass1.BuyShare1@59309333]" started-at="2022-09-26T23:18:25 IST" name="loginAngelOne" finished-at="2022-09-26T23:18:27 IST" duration-ms="1628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAngelOne -->
        <test-method signature="sellShare()[pri:0, instance:testNGClass1.BuyShare1@59309333]" started-at="2022-09-26T23:18:27 IST" name="sellShare" finished-at="2022-09-26T23:18:32 IST" duration-ms="5517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sellShare -->
        <test-method is-config="true" signature="confirmShareOrder(org.testng.ITestResult)[pri:0, instance:testNGClass1.BuyShare1@59309333]" started-at="2022-09-26T23:18:32 IST" name="confirmShareOrder" finished-at="2022-09-26T23:18:46 IST" duration-ms="13462" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sellShare status=SUCCESS method=BuyShare1.sellShare()[pri:0, instance:testNGClass1.BuyShare1@59309333] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmShareOrder -->
        <test-method is-config="true" signature="cleanPOMObject()[pri:0, instance:testNGClass1.BuyShare1@59309333]" started-at="2022-09-26T23:18:46 IST" name="cleanPOMObject" finished-at="2022-09-26T23:18:46 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanPOMObject -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testNGClass1.BuyShare1@59309333]" started-at="2022-09-26T23:18:53 IST" name="closeBrowser" finished-at="2022-09-26T23:18:57 IST" duration-ms="3410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testNGClass1.BuyShare1 -->
      <class name="testNGClass1.BuyShare">
        <test-method is-config="true" signature="launchBrowser(java.lang.String)[pri:0, instance:testNGClass1.BuyShare@7b9a4292]" started-at="2022-09-26T23:17:43 IST" name="launchBrowser" finished-at="2022-09-26T23:17:46 IST" duration-ms="2366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="lounchBrowser()[pri:0, instance:testNGClass1.BuyShare@7b9a4292]" started-at="2022-09-26T23:17:47 IST" name="lounchBrowser" finished-at="2022-09-26T23:17:47 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lounchBrowser -->
        <test-method is-config="true" signature="loginAngelOne()[pri:0, instance:testNGClass1.BuyShare@7b9a4292]" started-at="2022-09-26T23:17:47 IST" name="loginAngelOne" finished-at="2022-09-26T23:18:04 IST" duration-ms="16845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAngelOne -->
        <test-method signature="openMarket()[pri:0, instance:testNGClass1.BuyShare@7b9a4292]" started-at="2022-09-26T23:18:04 IST" name="openMarket" finished-at="2022-09-26T23:18:06 IST" duration-ms="2025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openMarket -->
        <test-method is-config="true" signature="captureScreenShot(org.testng.ITestResult)[pri:0, instance:testNGClass1.BuyShare@7b9a4292]" started-at="2022-09-26T23:18:06 IST" name="captureScreenShot" finished-at="2022-09-26T23:18:06 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openMarket status=SUCCESS method=BuyShare.openMarket()[pri:0, instance:testNGClass1.BuyShare@7b9a4292] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenShot -->
        <test-method is-config="true" signature="loginAngelOne()[pri:0, instance:testNGClass1.BuyShare@7b9a4292]" started-at="2022-09-26T23:18:06 IST" name="loginAngelOne" finished-at="2022-09-26T23:18:11 IST" duration-ms="5492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAngelOne -->
        <test-method signature="openOrder()[pri:0, instance:testNGClass1.BuyShare@7b9a4292]" started-at="2022-09-26T23:18:11 IST" name="openOrder" finished-at="2022-09-26T23:18:12 IST" duration-ms="646" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [https://trade.angelbroking.co/trade/trading/orderbook] but found [https://trade.angelbroking.com/trade/trading/orderbook]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [https://trade.angelbroking.co/trade/trading/orderbook] but found [https://trade.angelbroking.com/trade/trading/orderbook]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testNGClass1.BuyShare.openOrder(BuyShare.java:108)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openOrder -->
        <test-method is-config="true" signature="captureScreenShot(org.testng.ITestResult)[pri:0, instance:testNGClass1.BuyShare@7b9a4292]" started-at="2022-09-26T23:18:12 IST" name="captureScreenShot" finished-at="2022-09-26T23:18:12 IST" duration-ms="330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openOrder status=FAILURE method=BuyShare.openOrder()[pri:0, instance:testNGClass1.BuyShare@7b9a4292] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenShot -->
        <test-method is-config="true" signature="cleanPOMObject()[pri:0, instance:testNGClass1.BuyShare@7b9a4292]" started-at="2022-09-26T23:18:12 IST" name="cleanPOMObject" finished-at="2022-09-26T23:18:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanPOMObject -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testNGClass1.BuyShare@7b9a4292]" started-at="2022-09-26T23:18:46 IST" name="closeBrowser" finished-at="2022-09-26T23:18:53 IST" duration-ms="7543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testNGClass1.BuyShare -->
    </test> <!-- ChromeTest -->
  </suite> <!-- Suite -->
</testng-results>
